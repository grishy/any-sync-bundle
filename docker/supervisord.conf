[supervisord]
nodaemon=true
logfile=/dev/stdout
logfile_maxbytes=0
user=root
stopasgroup=true
killasgroup=true
stopsignal=SIGINT

[program:mongod]
command=sh -c 'mkdir -p /data/mongo && /usr/bin/mongod --port 27017 --dbpath /data/mongo --replSet rs0'
priority=10
startsecs=5
autostart=true
autorestart=false
stopasgroup=true
killasgroup=true
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
stdout_events_enabled=true
stderr_events_enabled=true
startretries=0
stopsignal=SIGINT

[program:redis]
command=sh -c 'mkdir -p /data/redis && /usr/bin/redis-server --port 6379 --dir /data/redis --appendonly yes --maxmemory 256mb --maxmemory-policy noeviction --protected-mode no --loadmodule /opt/redis-stack/lib/redisbloom.so'
priority=10
startsecs=5
autostart=true
autorestart=false
stopasgroup=true
killasgroup=true
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
stdout_events_enabled=true
stderr_events_enabled=true
startretries=0
stopsignal=SIGINT

[program:any-sync-bundle]
command=/usr/local/bin/any-sync-bundle start --init-mongo-rs
priority=20
startsecs=10
autostart=true
autorestart=false
stopasgroup=true
killasgroup=true
stdout_logfile=/dev/stdout
stderr_logfile=/dev/stderr
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
stdout_events_enabled=true
stderr_events_enabled=true
startretries=0
stopsignal=SIGINT

[eventlistener:processes]
# 1. READY signal to supervisor that the process is ready
# 2. When we got a line from stdin from supervisor on PROCESS_STATE_EXITED,... event
#    we will send SIGINT to supervisord and it will resend to all 'program'
command=bash -c "printf 'READY\n' && while read line; do kill -s SIGINT $(cat supervisord.pid); done < /dev/stdin"
events=PROCESS_STATE_EXITED,PROCESS_STATE_STOPPED,PROCESS_STATE_STOPPING
