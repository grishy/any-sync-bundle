// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: modification.proto

package indexpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Key struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_GroupId     *string                `protobuf:"bytes,1,opt,name=group_id,json=groupId"`
	xxx_hidden_SpaceId     *string                `protobuf:"bytes,2,opt,name=space_id,json=spaceId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_modification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_modification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Key) GetGroupId() string {
	if x != nil {
		if x.xxx_hidden_GroupId != nil {
			return *x.xxx_hidden_GroupId
		}
		return ""
	}
	return ""
}

func (x *Key) GetSpaceId() string {
	if x != nil {
		if x.xxx_hidden_SpaceId != nil {
			return *x.xxx_hidden_SpaceId
		}
		return ""
	}
	return ""
}

func (x *Key) SetGroupId(v string) {
	x.xxx_hidden_GroupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Key) SetSpaceId(v string) {
	x.xxx_hidden_SpaceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Key) HasGroupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Key) HasSpaceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Key) ClearGroupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_GroupId = nil
}

func (x *Key) ClearSpaceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SpaceId = nil
}

type Key_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	GroupId *string
	SpaceId *string
}

func (b0 Key_builder) Build() *Key {
	m0 := &Key{}
	b, x := &b0, m0
	_, _ = b, x
	if b.GroupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_GroupId = b.GroupId
	}
	if b.SpaceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_SpaceId = b.SpaceId
	}
	return m0
}

type FileBindOperation struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FileId      *string                `protobuf:"bytes,1,opt,name=file_id,json=fileId"`
	xxx_hidden_Cids        []string               `protobuf:"bytes,2,rep,name=cids"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FileBindOperation) Reset() {
	*x = FileBindOperation{}
	mi := &file_modification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileBindOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBindOperation) ProtoMessage() {}

func (x *FileBindOperation) ProtoReflect() protoreflect.Message {
	mi := &file_modification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileBindOperation) GetFileId() string {
	if x != nil {
		if x.xxx_hidden_FileId != nil {
			return *x.xxx_hidden_FileId
		}
		return ""
	}
	return ""
}

func (x *FileBindOperation) GetCids() []string {
	if x != nil {
		return x.xxx_hidden_Cids
	}
	return nil
}

func (x *FileBindOperation) SetFileId(v string) {
	x.xxx_hidden_FileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *FileBindOperation) SetCids(v []string) {
	x.xxx_hidden_Cids = v
}

func (x *FileBindOperation) HasFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FileBindOperation) ClearFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FileId = nil
}

type FileBindOperation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FileId *string
	Cids   []string
}

func (b0 FileBindOperation_builder) Build() *FileBindOperation {
	m0 := &FileBindOperation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_FileId = b.FileId
	}
	x.xxx_hidden_Cids = b.Cids
	return m0
}

type FileDeleteOperation struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FileIds []string               `protobuf:"bytes,1,rep,name=file_ids,json=fileIds"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FileDeleteOperation) Reset() {
	*x = FileDeleteOperation{}
	mi := &file_modification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDeleteOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDeleteOperation) ProtoMessage() {}

func (x *FileDeleteOperation) ProtoReflect() protoreflect.Message {
	mi := &file_modification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileDeleteOperation) GetFileIds() []string {
	if x != nil {
		return x.xxx_hidden_FileIds
	}
	return nil
}

func (x *FileDeleteOperation) SetFileIds(v []string) {
	x.xxx_hidden_FileIds = v
}

type FileDeleteOperation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FileIds []string
}

func (b0 FileDeleteOperation_builder) Build() *FileDeleteOperation {
	m0 := &FileDeleteOperation{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_FileIds = b.FileIds
	return m0
}

type CidAddOperation struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FileId      *string                `protobuf:"bytes,1,opt,name=file_id,json=fileId"`
	xxx_hidden_Cid         *string                `protobuf:"bytes,2,opt,name=cid"`
	xxx_hidden_DataSize    uint64                 `protobuf:"varint,3,opt,name=data_size,json=dataSize"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CidAddOperation) Reset() {
	*x = CidAddOperation{}
	mi := &file_modification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CidAddOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CidAddOperation) ProtoMessage() {}

func (x *CidAddOperation) ProtoReflect() protoreflect.Message {
	mi := &file_modification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CidAddOperation) GetFileId() string {
	if x != nil {
		if x.xxx_hidden_FileId != nil {
			return *x.xxx_hidden_FileId
		}
		return ""
	}
	return ""
}

func (x *CidAddOperation) GetCid() string {
	if x != nil {
		if x.xxx_hidden_Cid != nil {
			return *x.xxx_hidden_Cid
		}
		return ""
	}
	return ""
}

func (x *CidAddOperation) GetDataSize() uint64 {
	if x != nil {
		return x.xxx_hidden_DataSize
	}
	return 0
}

func (x *CidAddOperation) SetFileId(v string) {
	x.xxx_hidden_FileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CidAddOperation) SetCid(v string) {
	x.xxx_hidden_Cid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *CidAddOperation) SetDataSize(v uint64) {
	x.xxx_hidden_DataSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CidAddOperation) HasFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CidAddOperation) HasCid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CidAddOperation) HasDataSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CidAddOperation) ClearFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FileId = nil
}

func (x *CidAddOperation) ClearCid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Cid = nil
}

func (x *CidAddOperation) ClearDataSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DataSize = 0
}

type CidAddOperation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FileId   *string
	Cid      *string
	DataSize *uint64
}

func (b0 CidAddOperation_builder) Build() *CidAddOperation {
	m0 := &CidAddOperation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_FileId = b.FileId
	}
	if b.Cid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Cid = b.Cid
	}
	if b.DataSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_DataSize = *b.DataSize
	}
	return m0
}

// Operation encapsulates all possible index modification operations.
type Operation struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Op isOperation_Op         `protobuf_oneof:"op"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Operation) Reset() {
	*x = Operation{}
	mi := &file_modification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_modification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Operation) GetCidAdd() *CidAddOperation {
	if x != nil {
		if x, ok := x.xxx_hidden_Op.(*operation_CidAdd); ok {
			return x.CidAdd
		}
	}
	return nil
}

func (x *Operation) GetBindFile() *FileBindOperation {
	if x != nil {
		if x, ok := x.xxx_hidden_Op.(*operation_BindFile); ok {
			return x.BindFile
		}
	}
	return nil
}

func (x *Operation) GetDeleteFile() *FileDeleteOperation {
	if x != nil {
		if x, ok := x.xxx_hidden_Op.(*operation_DeleteFile); ok {
			return x.DeleteFile
		}
	}
	return nil
}

func (x *Operation) SetCidAdd(v *CidAddOperation) {
	if v == nil {
		x.xxx_hidden_Op = nil
		return
	}
	x.xxx_hidden_Op = &operation_CidAdd{v}
}

func (x *Operation) SetBindFile(v *FileBindOperation) {
	if v == nil {
		x.xxx_hidden_Op = nil
		return
	}
	x.xxx_hidden_Op = &operation_BindFile{v}
}

func (x *Operation) SetDeleteFile(v *FileDeleteOperation) {
	if v == nil {
		x.xxx_hidden_Op = nil
		return
	}
	x.xxx_hidden_Op = &operation_DeleteFile{v}
}

func (x *Operation) HasOp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Op != nil
}

func (x *Operation) HasCidAdd() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Op.(*operation_CidAdd)
	return ok
}

func (x *Operation) HasBindFile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Op.(*operation_BindFile)
	return ok
}

func (x *Operation) HasDeleteFile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Op.(*operation_DeleteFile)
	return ok
}

func (x *Operation) ClearOp() {
	x.xxx_hidden_Op = nil
}

func (x *Operation) ClearCidAdd() {
	if _, ok := x.xxx_hidden_Op.(*operation_CidAdd); ok {
		x.xxx_hidden_Op = nil
	}
}

func (x *Operation) ClearBindFile() {
	if _, ok := x.xxx_hidden_Op.(*operation_BindFile); ok {
		x.xxx_hidden_Op = nil
	}
}

func (x *Operation) ClearDeleteFile() {
	if _, ok := x.xxx_hidden_Op.(*operation_DeleteFile); ok {
		x.xxx_hidden_Op = nil
	}
}

const Operation_Op_not_set_case case_Operation_Op = 0
const Operation_CidAdd_case case_Operation_Op = 1
const Operation_BindFile_case case_Operation_Op = 2
const Operation_DeleteFile_case case_Operation_Op = 3

func (x *Operation) WhichOp() case_Operation_Op {
	if x == nil {
		return Operation_Op_not_set_case
	}
	switch x.xxx_hidden_Op.(type) {
	case *operation_CidAdd:
		return Operation_CidAdd_case
	case *operation_BindFile:
		return Operation_BindFile_case
	case *operation_DeleteFile:
		return Operation_DeleteFile_case
	default:
		return Operation_Op_not_set_case
	}
}

type Operation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Op:
	CidAdd     *CidAddOperation
	BindFile   *FileBindOperation
	DeleteFile *FileDeleteOperation
	// -- end of xxx_hidden_Op
}

func (b0 Operation_builder) Build() *Operation {
	m0 := &Operation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CidAdd != nil {
		x.xxx_hidden_Op = &operation_CidAdd{b.CidAdd}
	}
	if b.BindFile != nil {
		x.xxx_hidden_Op = &operation_BindFile{b.BindFile}
	}
	if b.DeleteFile != nil {
		x.xxx_hidden_Op = &operation_DeleteFile{b.DeleteFile}
	}
	return m0
}

type case_Operation_Op protoreflect.FieldNumber

func (x case_Operation_Op) String() string {
	md := file_modification_proto_msgTypes[4].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isOperation_Op interface {
	isOperation_Op()
}

type operation_CidAdd struct {
	CidAdd *CidAddOperation `protobuf:"bytes,1,opt,name=cid_add,json=cidAdd,oneof"`
}

type operation_BindFile struct {
	BindFile *FileBindOperation `protobuf:"bytes,2,opt,name=bind_file,json=bindFile,oneof"`
}

type operation_DeleteFile struct {
	DeleteFile *FileDeleteOperation `protobuf:"bytes,3,opt,name=delete_file,json=deleteFile,oneof"`
}

func (*operation_CidAdd) isOperation_Op() {}

func (*operation_BindFile) isOperation_Op() {}

func (*operation_DeleteFile) isOperation_Op() {}

// WALRecord represents a single write-ahead log record.
type WALRecord struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp   int64                  `protobuf:"varint,1,opt,name=timestamp"`
	xxx_hidden_Key         *Key                   `protobuf:"bytes,2,opt,name=key"`
	xxx_hidden_Ops         *[]*Operation          `protobuf:"bytes,3,rep,name=ops"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *WALRecord) Reset() {
	*x = WALRecord{}
	mi := &file_modification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WALRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALRecord) ProtoMessage() {}

func (x *WALRecord) ProtoReflect() protoreflect.Message {
	mi := &file_modification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *WALRecord) GetTimestamp() int64 {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return 0
}

func (x *WALRecord) GetKey() *Key {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return nil
}

func (x *WALRecord) GetOps() []*Operation {
	if x != nil {
		if x.xxx_hidden_Ops != nil {
			return *x.xxx_hidden_Ops
		}
	}
	return nil
}

func (x *WALRecord) SetTimestamp(v int64) {
	x.xxx_hidden_Timestamp = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *WALRecord) SetKey(v *Key) {
	x.xxx_hidden_Key = v
}

func (x *WALRecord) SetOps(v []*Operation) {
	x.xxx_hidden_Ops = &v
}

func (x *WALRecord) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *WALRecord) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *WALRecord) ClearTimestamp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Timestamp = 0
}

func (x *WALRecord) ClearKey() {
	x.xxx_hidden_Key = nil
}

type WALRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp *int64
	Key       *Key
	Ops       []*Operation
}

func (b0 WALRecord_builder) Build() *WALRecord {
	m0 := &WALRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Timestamp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Timestamp = *b.Timestamp
	}
	x.xxx_hidden_Key = b.Key
	x.xxx_hidden_Ops = &b.Ops
	return m0
}

var File_modification_proto protoreflect.FileDescriptor

var file_modification_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62, 0x22, 0x3b, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x11, 0x46, 0x69,
	0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x73, 0x22, 0x30, 0x0a, 0x13,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x59,
	0x0a, 0x0f, 0x43, 0x69, 0x64, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x09, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x69, 0x64, 0x5f, 0x61,
	0x64, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x70, 0x62, 0x2e, 0x43, 0x69, 0x64, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x63, 0x69, 0x64, 0x41, 0x64, 0x64, 0x12, 0x39, 0x0a, 0x09,
	0x62, 0x69, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x69,
	0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x62,
	0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x04, 0x0a, 0x02, 0x6f, 0x70, 0x22, 0x6f,
	0x0a, 0x09, 0x57, 0x41, 0x4c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62,
	0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x03, 0x6f, 0x70, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x70, 0x73, 0x42,
	0x0f, 0x5a, 0x0d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62,
	0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var file_modification_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_modification_proto_goTypes = []any{
	(*Key)(nil),                 // 0: indexpb.Key
	(*FileBindOperation)(nil),   // 1: indexpb.FileBindOperation
	(*FileDeleteOperation)(nil), // 2: indexpb.FileDeleteOperation
	(*CidAddOperation)(nil),     // 3: indexpb.CidAddOperation
	(*Operation)(nil),           // 4: indexpb.Operation
	(*WALRecord)(nil),           // 5: indexpb.WALRecord
}
var file_modification_proto_depIdxs = []int32{
	3, // 0: indexpb.Operation.cid_add:type_name -> indexpb.CidAddOperation
	1, // 1: indexpb.Operation.bind_file:type_name -> indexpb.FileBindOperation
	2, // 2: indexpb.Operation.delete_file:type_name -> indexpb.FileDeleteOperation
	0, // 3: indexpb.WALRecord.key:type_name -> indexpb.Key
	4, // 4: indexpb.WALRecord.ops:type_name -> indexpb.Operation
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_modification_proto_init() }
func file_modification_proto_init() {
	if File_modification_proto != nil {
		return
	}
	file_modification_proto_msgTypes[4].OneofWrappers = []any{
		(*operation_CidAdd)(nil),
		(*operation_BindFile)(nil),
		(*operation_DeleteFile)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_modification_proto_rawDesc), len(file_modification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_modification_proto_goTypes,
		DependencyIndexes: file_modification_proto_depIdxs,
		MessageInfos:      file_modification_proto_msgTypes,
	}.Build()
	File_modification_proto = out.File
	file_modification_proto_goTypes = nil
	file_modification_proto_depIdxs = nil
}
