// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: index.proto

package indexpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Composite key for identifying the space within a group.
type Key struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_GroupId     *string                `protobuf:"bytes,1,opt,name=group_id,json=groupId"`
	xxx_hidden_SpaceId     *string                `protobuf:"bytes,2,opt,name=space_id,json=spaceId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_index_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Key) GetGroupId() string {
	if x != nil {
		if x.xxx_hidden_GroupId != nil {
			return *x.xxx_hidden_GroupId
		}
		return ""
	}
	return ""
}

func (x *Key) GetSpaceId() string {
	if x != nil {
		if x.xxx_hidden_SpaceId != nil {
			return *x.xxx_hidden_SpaceId
		}
		return ""
	}
	return ""
}

func (x *Key) SetGroupId(v string) {
	x.xxx_hidden_GroupId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Key) SetSpaceId(v string) {
	x.xxx_hidden_SpaceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Key) HasGroupId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Key) HasSpaceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Key) ClearGroupId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_GroupId = nil
}

func (x *Key) ClearSpaceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SpaceId = nil
}

type Key_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	GroupId *string
	SpaceId *string
}

func (b0 Key_builder) Build() *Key {
	m0 := &Key{}
	b, x := &b0, m0
	_, _ = b, x
	if b.GroupId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_GroupId = b.GroupId
	}
	if b.SpaceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_SpaceId = b.SpaceId
	}
	return m0
}

// Define parameters for binding a file.
type FileBindOperation struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FileId      *string                `protobuf:"bytes,1,opt,name=file_id,json=fileId"`
	xxx_hidden_BlockCids   []string               `protobuf:"bytes,2,rep,name=block_cids,json=blockCids"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FileBindOperation) Reset() {
	*x = FileBindOperation{}
	mi := &file_index_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileBindOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBindOperation) ProtoMessage() {}

func (x *FileBindOperation) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileBindOperation) GetFileId() string {
	if x != nil {
		if x.xxx_hidden_FileId != nil {
			return *x.xxx_hidden_FileId
		}
		return ""
	}
	return ""
}

func (x *FileBindOperation) GetBlockCids() []string {
	if x != nil {
		return x.xxx_hidden_BlockCids
	}
	return nil
}

func (x *FileBindOperation) SetFileId(v string) {
	x.xxx_hidden_FileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *FileBindOperation) SetBlockCids(v []string) {
	x.xxx_hidden_BlockCids = v
}

func (x *FileBindOperation) HasFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FileBindOperation) ClearFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FileId = nil
}

type FileBindOperation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FileId *string
	// List of block CIDs associated with this file.
	BlockCids []string
}

func (b0 FileBindOperation_builder) Build() *FileBindOperation {
	m0 := &FileBindOperation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_FileId = b.FileId
	}
	x.xxx_hidden_BlockCids = b.BlockCids
	return m0
}

// Define parameters for unbinding a file.
type FileUnbindOperation struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FileId      *string                `protobuf:"bytes,1,opt,name=file_id,json=fileId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FileUnbindOperation) Reset() {
	*x = FileUnbindOperation{}
	mi := &file_index_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUnbindOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUnbindOperation) ProtoMessage() {}

func (x *FileUnbindOperation) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileUnbindOperation) GetFileId() string {
	if x != nil {
		if x.xxx_hidden_FileId != nil {
			return *x.xxx_hidden_FileId
		}
		return ""
	}
	return ""
}

func (x *FileUnbindOperation) SetFileId(v string) {
	x.xxx_hidden_FileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *FileUnbindOperation) HasFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FileUnbindOperation) ClearFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FileId = nil
}

type FileUnbindOperation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FileId *string
}

func (b0 FileUnbindOperation_builder) Build() *FileUnbindOperation {
	m0 := &FileUnbindOperation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_FileId = b.FileId
	}
	return m0
}

// Operation encapsulates all possible index modification operations.
type Operation struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Op isOperation_Op         `protobuf_oneof:"op"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Operation) Reset() {
	*x = Operation{}
	mi := &file_index_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Operation) GetBindFile() *FileBindOperation {
	if x != nil {
		if x, ok := x.xxx_hidden_Op.(*operation_BindFile); ok {
			return x.BindFile
		}
	}
	return nil
}

func (x *Operation) GetUnbindFile() *FileUnbindOperation {
	if x != nil {
		if x, ok := x.xxx_hidden_Op.(*operation_UnbindFile); ok {
			return x.UnbindFile
		}
	}
	return nil
}

func (x *Operation) SetBindFile(v *FileBindOperation) {
	if v == nil {
		x.xxx_hidden_Op = nil
		return
	}
	x.xxx_hidden_Op = &operation_BindFile{v}
}

func (x *Operation) SetUnbindFile(v *FileUnbindOperation) {
	if v == nil {
		x.xxx_hidden_Op = nil
		return
	}
	x.xxx_hidden_Op = &operation_UnbindFile{v}
}

func (x *Operation) HasOp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Op != nil
}

func (x *Operation) HasBindFile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Op.(*operation_BindFile)
	return ok
}

func (x *Operation) HasUnbindFile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Op.(*operation_UnbindFile)
	return ok
}

func (x *Operation) ClearOp() {
	x.xxx_hidden_Op = nil
}

func (x *Operation) ClearBindFile() {
	if _, ok := x.xxx_hidden_Op.(*operation_BindFile); ok {
		x.xxx_hidden_Op = nil
	}
}

func (x *Operation) ClearUnbindFile() {
	if _, ok := x.xxx_hidden_Op.(*operation_UnbindFile); ok {
		x.xxx_hidden_Op = nil
	}
}

const Operation_Op_not_set_case case_Operation_Op = 0
const Operation_BindFile_case case_Operation_Op = 1
const Operation_UnbindFile_case case_Operation_Op = 2

func (x *Operation) WhichOp() case_Operation_Op {
	if x == nil {
		return Operation_Op_not_set_case
	}
	switch x.xxx_hidden_Op.(type) {
	case *operation_BindFile:
		return Operation_BindFile_case
	case *operation_UnbindFile:
		return Operation_UnbindFile_case
	default:
		return Operation_Op_not_set_case
	}
}

type Operation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Op:
	BindFile   *FileBindOperation
	UnbindFile *FileUnbindOperation
	// -- end of xxx_hidden_Op
}

func (b0 Operation_builder) Build() *Operation {
	m0 := &Operation{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BindFile != nil {
		x.xxx_hidden_Op = &operation_BindFile{b.BindFile}
	}
	if b.UnbindFile != nil {
		x.xxx_hidden_Op = &operation_UnbindFile{b.UnbindFile}
	}
	return m0
}

type case_Operation_Op protoreflect.FieldNumber

func (x case_Operation_Op) String() string {
	md := file_index_proto_msgTypes[3].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isOperation_Op interface {
	isOperation_Op()
}

type operation_BindFile struct {
	BindFile *FileBindOperation `protobuf:"bytes,1,opt,name=bind_file,json=bindFile,oneof"`
}

type operation_UnbindFile struct {
	UnbindFile *FileUnbindOperation `protobuf:"bytes,2,opt,name=unbind_file,json=unbindFile,oneof"` // TODO: Add other operations here as needed.
}

func (*operation_BindFile) isOperation_Op() {}

func (*operation_UnbindFile) isOperation_Op() {}

// AOFRecord represents a single write-ahead log record.
type AOFRecord struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key         *Key                   `protobuf:"bytes,1,opt,name=key"`
	xxx_hidden_Operation   *Operation             `protobuf:"bytes,2,opt,name=operation"`
	xxx_hidden_Timestamp   int64                  `protobuf:"varint,3,opt,name=timestamp"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AOFRecord) Reset() {
	*x = AOFRecord{}
	mi := &file_index_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AOFRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AOFRecord) ProtoMessage() {}

func (x *AOFRecord) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AOFRecord) GetKey() *Key {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return nil
}

func (x *AOFRecord) GetOperation() *Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *AOFRecord) GetTimestamp() int64 {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return 0
}

func (x *AOFRecord) SetKey(v *Key) {
	x.xxx_hidden_Key = v
}

func (x *AOFRecord) SetOperation(v *Operation) {
	x.xxx_hidden_Operation = v
}

func (x *AOFRecord) SetTimestamp(v int64) {
	x.xxx_hidden_Timestamp = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *AOFRecord) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *AOFRecord) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *AOFRecord) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AOFRecord) ClearKey() {
	x.xxx_hidden_Key = nil
}

func (x *AOFRecord) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

func (x *AOFRecord) ClearTimestamp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Timestamp = 0
}

type AOFRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key       *Key
	Operation *Operation
	Timestamp *int64
}

func (b0 AOFRecord_builder) Build() *AOFRecord {
	m0 := &AOFRecord{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	x.xxx_hidden_Operation = b.Operation
	if b.Timestamp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Timestamp = *b.Timestamp
	}
	return m0
}

var File_index_proto protoreflect.FileDescriptor

var file_index_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x70, 0x62, 0x22, 0x3b, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x69, 0x64, 0x73,
	0x22, 0x2e, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x8d, 0x01, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x09, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x08, 0x62, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x75, 0x6e, 0x62,
	0x69, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x6e, 0x62,
	0x69, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a,
	0x75, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x04, 0x0a, 0x02, 0x6f, 0x70,
	0x22, 0x7b, 0x0a, 0x09, 0x41, 0x4f, 0x46, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0f, 0x5a,
	0x0d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x70, 0x62, 0x62, 0x08,
	0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var file_index_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_index_proto_goTypes = []any{
	(*Key)(nil),                 // 0: indexpb.Key
	(*FileBindOperation)(nil),   // 1: indexpb.FileBindOperation
	(*FileUnbindOperation)(nil), // 2: indexpb.FileUnbindOperation
	(*Operation)(nil),           // 3: indexpb.Operation
	(*AOFRecord)(nil),           // 4: indexpb.AOFRecord
}
var file_index_proto_depIdxs = []int32{
	1, // 0: indexpb.Operation.bind_file:type_name -> indexpb.FileBindOperation
	2, // 1: indexpb.Operation.unbind_file:type_name -> indexpb.FileUnbindOperation
	0, // 2: indexpb.AOFRecord.key:type_name -> indexpb.Key
	3, // 3: indexpb.AOFRecord.operation:type_name -> indexpb.Operation
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_index_proto_init() }
func file_index_proto_init() {
	if File_index_proto != nil {
		return
	}
	file_index_proto_msgTypes[3].OneofWrappers = []any{
		(*operation_BindFile)(nil),
		(*operation_UnbindFile)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_index_proto_rawDesc), len(file_index_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_index_proto_goTypes,
		DependencyIndexes: file_index_proto_depIdxs,
		MessageInfos:      file_index_proto_msgTypes,
	}.Build()
	File_index_proto = out.File
	file_index_proto_goTypes = nil
	file_index_proto_depIdxs = nil
}
